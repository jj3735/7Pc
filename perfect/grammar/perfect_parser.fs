//F# Parser generated by Rustlr for grammar perfect_
    
module Perfect_
open System;
open System.Collections.Generic;
open Fussless;
open Fussless.RuntimeParser;
 type expr =
 | Integer of int
 | Floatpt of float
 | Strlit of string
 | Var of string
 | TypedVar of lrtype*string
 | Binop of string*expr*expr
 | Uniop of string*expr
 | Ifelse of expr*expr*expr
 | Whileloop of expr*expr
 | Setq of LBox<string>*expr
 | Beginseq of LBox<expr> list
 | Sequence of LBox<expr> list
 | Apply of expr*expr list
 | Define of LBox<string>*expr
 | TypedDefine of LBox<lrtype*string>*expr
 | Let of LBox<string>*expr*LBox<expr>
 | TypedLet of LBox<lrtype*string>*expr*LBox<expr>
 | TypedLambda of ((lrtype*string) list)*lrtype*LBox<expr>
 | Vector of LBox<expr> list
 | VectorGet of string*expr
 | VectorSet of string*expr*expr
 | Export of string
 | Nil
 | Error
 and lrtype =
 | LRint | LRfloat | LRstring | LRunit
 | LRvar of string | LRunknown
 | LRlist of lrtype | LRtuple of lrtype list
 | LRclosure of ((lrtype list)*lrtype)*string
 | LRuntypable

let private SYMBOLS = [|"_WILDCARD_TOKEN_";"car";"cdr";"print";"~";"NOT";"*";"/";"%";"+";"-";"<";"<=";">";">=";"==";"!=";"^";"AND";"OR";"=";"int";"float";"string";"if";"then";"else";"let";"in";"while";"define";"lambda";"export";"INT";"FLT";"STR";"VAR";"COLON";"LPAR";"RPAR";"SEMI";"LBRC";"RBRC";"LBRK";"RBRK";"COMMA";"PERIOD";"Atom_";"Btom_";"Ctom_";"Dtom_";"Etom_";"Ftom_";"Gtom_";"Htom_";"Itom_";"Jtom_";"Expr_";"Type_";"Stmt_";"ApplyList_";"CurrentAPL_";"StmtList_";"CurrentSL_";"AtomList_";"LambdaList_";"OptionalType_";"OptionalLambdaType_";"Program_";"START";"EOF"|];

let private TABLE:uint64 [] = [|231928365057UL;253403922433UL;146029805568UL;240519872513UL;249110069249UL;176095428608UL;90196410368UL;115964641280UL;163210067968UL;227634708481UL;124556083200UL;236223660033UL;12886147072UL;128850395136UL;137439674368UL;206159937537UL;201865625601UL;292060069889UL;244814774273UL;287763857409UL;94489935872UL;103080787968UL;133148442626UL;150325755904UL;154620002304UL;21477195776UL;219043397633UL;4297195520UL;17180065792UL;210453725185UL;184684380160UL;223338561537UL;8591048704UL;300652429314UL;141735755776UL;47245623296UL;98784837632UL;214748758017UL;281668252008450UL;281646777171970UL;281530813775872UL;281547992924162UL;281663957041154UL;281543697956866UL;281552287891458UL;281522223972352UL;281582352662530UL;281526518874112UL;281642482204674UL;281535108677632UL;281539402989570UL;281556582858754UL;563143229112322UL;563031559962626UL;563138934145026UL;563057329766402UL;563117459308546UL;563027265519616UL;563121754275842UL;844588140199936UL;844575255887872UL;844626796347393UL;844570959937536UL;844579551772672UL;844566665887744UL;1126088887304194UL;1126067412467714UL;1125964334235648UL;1125972923187202UL;1125981513121794UL;1126093182271490UL;1126071707435010UL;1126007282925570UL;1125977218154498UL;1125968629268480UL;1407568158326786UL;1407422129438722UL;1407417834471426UL;1407546683490306UL;1407563863359490UL;1407456489177090UL;1407413539504130UL;1407542388523010UL;1407430719373314UL;1407409246371840UL;1407404951470080UL;1407435014340610UL;1407482258980866UL;1407447899242498UL;1407439309307906UL;1407426424406018UL;1407400656371712UL;1407452194209794UL;1407443604275202UL;1688901401444354UL;1689038840397826UL;1688918581313538UL;1689021660528642UL;1688909991378946UL;1689017365561346UL;1689043135365122UL;1688892813148160UL;1688957236019202UL;1688914286346242UL;1688897106477058UL;1688922876280834UL;1688931466215426UL;1688888518246400UL;1688905696411650UL;1688927171248130UL;1970496637960194UL;1970406444695552UL;1970492342992898UL;1970513817829378UL;2251954435915776UL;2533360694001666UL;2533472363151362UL;2533407938641922UL;2533468068184066UL;2533459478249474UL;2814934454894594UL;2814943044829186UL;2814882915287042UL;2814947339796482UL;2814835670646786UL;3096379366113280UL;3377841456283648UL;3377845750333440UL;3377854342168576UL;3377862930595840UL;3377850046283776UL;3377901587529729UL;3659419512012801UL;3659191877304320UL;3659264893648896UL;3659269187174400UL;3659325022994432UL;3659303547633664UL;3659475349602306UL;3659337907306496UL;3659187583385600UL;3659178994434048UL;3659277778026496UL;3659316432994304UL;3659410920898561UL;3659312136912896UL;3659398035800065UL;3659376562864129UL;3659329317240832UL;3659196174434304UL;3659380857176065UL;3659273482076160UL;3659307845681154UL;3659359381618688UL;3659428103913473UL;3659299253321728UL;3659423807307777UL;3659350792667136UL;3659393740636161UL;3659415217111041UL;3659462461095937UL;3659385150963713UL;3659221942861824UL;3659406625603585UL;3659320727044096UL;3659183288287232UL;3659402331947009UL;3659389445996545UL;3659290661879808UL;3940817177804802UL;3940834357673986UL;3940726983491586UL;3940774228131842UL;3940675443884034UL;3940795702968322UL;3940709803622402UL;3940757048262658UL;3940812882837506UL;3940761343229954UL;3940696918720514UL;3940744163360770UL;3940748458328066UL;3940791408001026UL;3940765638197250UL;3940778523099138UL;3940769933164546UL;3940666853949442UL;3940692623753218UL;3940671148916738UL;3940842947608578UL;3940838652641282UL;3940658264014850UL;3940752753295362UL;3940804292902914UL;3940821472772098UL;3940739868393474UL;3940653969047554UL;3940830062706690UL;3940731278458882UL;3940679738851330UL;3940825767739394UL;3940684033818626UL;3940705508655106UL;3940950321790978UL;3940782818066434UL;3940714098589698UL;3940787113033730UL;3940701213687810UL;3940718393556994UL;3940722688524290UL;3940688328785922UL;3940799997935618UL;3940662558982146UL;4222279273152512UL;4503732775092224UL;4785224929837056UL;4785276471345153UL;4785229225721856UL;4785237814149120UL;4785216339836928UL;4785220633886720UL;5066609710661634UL;5066712789876738UL;5066742854647810UL;5066635484069888UL;5066588235825154UL;5066575350923266UL;5066596825759746UL;5066734268252160UL;5066601120727042UL;5066583940857858UL;5066631185498114UL;5066618300596226UL;5066626890530818UL;5066622595563522UL;5066592530792450UL;5066605415694338UL;5066579645890562UL;5066721379811330UL;5066614005628930UL;5348179179143168UL;5348166293258240UL;5348187767570432UL;5348170587308032UL;5348174883258368UL;5348226424963073UL;5629512420360192UL;5629718577610753UL;5629722872774657UL;5629508125261824UL;5629662744281088UL;5629684218593280UL;5629731462578177UL;5629701401870337UL;5629641269968896UL;5629516714278912UL;5629714282971137UL;5629654157099008UL;5629503831408640UL;5629705694150657UL;5629735757873153UL;5629709987938305UL;5629740054085633UL;5629649859969024UL;5629645564018688UL;5629727168921601UL;5629521011408896UL;5629744351477761UL;5911129134006272UL;6192616993390594UL;6192522506403840UL;6192621288357890UL;6192642763194370UL;6192531094044674UL;6192638468227074UL;6192556863848450UL;6192526799077378UL;6473984594935810UL;6474117738921986UL;6473963120099330UL;6473997479837698UL;6474113443954690UL;6473950235197442UL;6474006069772290UL;6474001774804994UL;6473988889903106UL;6473993184870402UL;6473954530164738UL;6473976005001218UL;6473958825132034UL;6473980299968514UL;6474091969118210UL;6474096264085506UL;6474031839576066UL;6473971710033922UL;6473967415066626UL;6755545470861312UL;6755609894780929UL;6755635668647937UL;6755562651123712UL;6755622779617281UL;6755554062696448UL;6755631369420801UL;6755601308712961UL;6755420918251520UL;6755412327202816UL;6755549766811648UL;6755408032104448UL;6755605600993281UL;6755416621121536UL;6755541176811520UL;6755627075764225UL;6755614189813761UL;6755403738251264UL;6755618484453377UL;7037046220914688UL;7318516900560898UL;7318538375397378UL;7318521195528194UL;7599970400993280UL;7600039119945729UL;7600077778911233UL;7599871616811008UL;7600000466616320UL;7599914567598080UL;7599940335828992UL;7599828668383232UL;7599948927270912UL;7600112135045121UL;7600094958714881UL;7599966106943488UL;7599832962236416UL;7600056299552769UL;7599957519630338UL;7599978991190016UL;7600090663682049UL;7600034824912897UL;7599923156025344UL;7599845848383488UL;7600026236813313UL;7599927451975680UL;7600047709749249UL;7600009055567872UL;7600004763287554UL;7600069185961985UL;7600043414585345UL;7599987581255680UL;7600052005896193UL;7599953221582848UL;7600030531125249UL;7599841551253504UL;7599918861123584UL;7600060594847745UL;7599961810862080UL;7599837257334784UL;7599974696943616UL;7600073481256961UL;7600064891060225UL;7881307937898498UL;7881325117767682UL;7881368067440642UL;7881488326524930UL;7881471146655746UL;7881350887571458UL;7881449671819266UL;7881380952342530UL;7881393837244418UL;7881428196982786UL;7881415312080898UL;7881333707702274UL;7881411017113602UL;7881338002669570UL;7881479736590338UL;7881432491950082UL;7881492621492226UL;7881303642931202UL;7881363772473346UL;7881419607048194UL;7881402427179010UL;7881355182538754UL;7881462556721154UL;7881599995674626UL;7881398132211714UL;7881376657375234UL;7881312232865794UL;7881389542277122UL;7881445376851970UL;7881329412734978UL;7881320822800386UL;7881466851688450UL;7881423902015490UL;7881346592604162UL;7881406722146306UL;7881441081884674UL;7881453966786562UL;7881475441623042UL;7881316527833090UL;7881484031557634UL;7881342297636866UL;7881372362407938UL;7881359477506050UL;7881436786917378UL;8162830159380482UL;8162778619772930UL;8162924648660994UL;8162941828530178UL;8162873109053442UL;8162903173824514UL;8162950418464770UL;8162817274478594UL;8162959008399362UL;8162881698988034UL;8162916058726402UL;8162885993955330UL;8162963303366658UL;8162894583889922UL;8162825864413186UL;8162890288922626UL;8162855929184258UL;8163074972516354UL;8162834454347778UL;8162791504674818UL;8162937533562882UL;8162795799642114UL;8162812979511298UL;8162967598333954UL;8162782914740226UL;8162928943628290UL;8162868814086146UL;8162808684544002UL;8162804389576706UL;8162946123497474UL;8162898878857218UL;8162877404020738UL;8162800094609410UL;8162911763759106UL;8162838749315074UL;8162787209707522UL;8162821569445890UL;8162843044282370UL;8162920353693698UL;8162847339249666UL;8162907468791810UL;8162851634216962UL;8162864519118850UL;8162954713432066UL;8444382449827842UL;8444433989632000UL;8725887491571712UL;9007332402855938UL;9007392532398082UL;9007285158215682UL;9007396827365378UL;9007383942463490UL;9288867509895168UL;9288742951321602UL;9288734361387010UL;9288730066419714UL;9288717181517826UL;9288949114208257UL;9288846030536706UL;9288700001648642UL;9288747246288898UL;9288725771452418UL;9288704296615938UL;9288755836223490UL;9288708591583234UL;9288738656354306UL;9288721476485122UL;9288751541256194UL;9288837445189632UL;9288712886550530UL;9570295237967872UL;9570312418230272UL;9570303829803008UL;9570290943918080UL;9570299533918208UL;9570351076671489UL;9851924832583683UL;10133249487339520UL;10133262371651584UL;10133253783224320UL;10133245191389184UL;10133240897339392UL;10133301030158337UL;10414587024441344UL;10414595615490048UL;10414724464050176UL;10414720168099840UL;10414788891836417UL;10414715874050048UL;10414591318360064UL;10414728759934976UL;10414737348362240UL;10414776005951489UL;10414784592019457UL;10414780298231809UL;10414582729342976UL;10414578435489792UL;10696212325072896UL;10696263868612609UL;10696066295070720UL;10696195144810496UL;10696053412200448UL;10696203736645632UL;10696062001152000UL;10696199440760832UL;10696190850760704UL;10696250982662145UL;10696255274942465UL;10696070592200704UL;10696259568730113UL;10696057706053632UL;10977734545440769UL;10977674417471488UL;10977545568911360UL;10977687301783552UL;10977541271781376UL;10977738845388801UL;10977532682764288UL;10977528388911104UL;10977670121521152UL;10977678713356288UL;10977725959372801UL;10977730251653121UL;10977665827471360UL;10977536977862656UL;11259205228363777UL;11259140804182016UL;11259200936083457UL;11259020545622016UL;11259011954573312UL;11259209522151425UL;11259162278494208UL;11259153690066944UL;11259145098231808UL;11259016248492032UL;11259007659474944UL;11259213822164993UL;11259003365621760UL;11259149394182144UL;11540693088534529UL;11540680205074433UL;11540697383698433UL;11540637255204864UL;11540628666777600UL;11540482636185600UL;11540491225202688UL;11540675912794113UL;11540486931283968UL;11540615780892672UL;11540495522332672UL;11540478342332416UL;11540620074942464UL;11540624370892800UL;11540688793894913UL;11540684498862081UL;11540701683843073UL;11822030626684930UL;11821996266946562UL;11822004856881154UL;11822000561913858UL;11821987677011970UL;11822017741783042UL;11822009151848450UL;11821974792110082UL;11822026331717634UL;11821991971979266UL;11822120820998146UL;11822138000867330UL;11822142295834626UL;11821983382044674UL;11822022036750338UL;11822056396488706UL;11821979087077378UL;11822013446815746UL;11822116526030850UL;12103441178755074UL;12103565732806658UL;12103552847904770UL;12103544257970178UL;12103591502610434UL;12103449768689666UL;12103557142872066UL;12103462653591554UL;12103570027773954UL;12103522783133698UL;12103595797577730UL;12103535668035586UL;12103475538493442UL;12103578617708546UL;12103539963002882UL;12103445473722370UL;12103600092545026UL;12103479833460738UL;12103531373068290UL;12103587207643138UL;12103428293853186UL;12103608687656960UL;12103497013329922UL;12103458358624258UL;12103505603264514UL;12103514193199106UL;12103604387512322UL;12103436883787778UL;12103574322741250UL;12103492718362626UL;12103432588820482UL;12103466948558850UL;12103501308297218UL;12103518488166402UL;12103527078100994UL;12103612977446914UL;12103617272414210UL;12103471243526146UL;12103724646596610UL;12103454063656962UL;12103484128428034UL;12103488423395330UL;12103548552937474UL;12103561437839362UL;12385040711024640UL;12385045005074432UL;12384903272464384UL;12385049301024768UL;12385118024171521UL;12385113724026881UL;12385105135206401UL;12384911861415936UL;12385062185336832UL;12385100842926081UL;12384920452464640UL;12384907566317568UL;12385109428994049UL;12385053596909568UL;12384916155334656UL;12666382543028224UL;12666524277735424UL;12666395429175296UL;12666386838126592UL;12666575819636737UL;12666391132045312UL;12666378249175040UL;12666519981785088UL;12666593000947713UL;12666528573620224UL;12666580111917057UL;12666584405704705UL;12666537162047488UL;12666588700737537UL;12666515687735296UL;12947870405885952UL;12947861814837248UL;12947857519738880UL;12947990664445952UL;12948003550330880UL;12948050796347393UL;12947994958495744UL;12948055092822017UL;12947866108755968UL;12948012138758144UL;12947853225885696UL;12947999254446080UL;13229469935206400UL;13229465641156608UL;13229478527041536UL;13229341085466624UL;13229332496449536UL;13229328202596352UL;13229474231156736UL;13229487115468800UL;13229525773058049UL;13229336791547904UL;13229345382596608UL;13229530069598209UL;13510953503752192UL;13510803179307008UL;13510949207867392UL;13511005046374401UL;13510820359307264UL;13510962092179456UL;13510940617867264UL;13510944911917056UL;13510807473160192UL;13510816062177280UL;13510811768258560UL;13511000749768705UL;13792437068890112UL;13792295336017920UL;13792419888627712UL;13792428480462848UL;13792282449870848UL;13792424184578048UL;13792480018759681UL;13792475726479361UL;13792415594577920UL;13792278156017664UL;13792286744969216UL;13792484318117889UL;13792291038887936UL;14073890571288576UL;14073894865338368UL;14073912045600768UL;14073959294894081UL;14073954995470337UL;14073903457173504UL;14073770312728576UL;14073950703190017UL;14073761721679872UL;14073766015598592UL;14073899161288704UL;14073757426581504UL;14073753132728320UL;14355442855641089UL;14355240992309248UL;14355455746506753UL;14355429972180993UL;14355232403292160UL;14355434265968641UL;14355447150804993UL;14355451446951937UL;14355425679900673UL;14355365547999232UL;14355438561001473UL;14355374137999360UL;14355236698390528UL;14355369842049024UL;14355228109438976UL;14355387022311424UL;14355378433884160UL;14355245289439232UL;14636982262956033UL;14636857708838912UL;14636784692297730UL;14918345570582528UL;15199842020818944UL;15199820547358720UL;15199923626639361UL;15481377126809601UL;15481128016281600UL;15481170964709376UL;15481136605233152UL;15481329879023617UL;15481256867528706UL;15481252569481216UL;15481342762483713UL;15481368533860353UL;15481394306613249UL;15481269748891648UL;15481274044841984UL;15481226799874048UL;15481390013480961UL;15481411482943489UL;15481325584711681UL;15481299814514688UL;15481372829155329UL;15481355647451137UL;15481359942746113UL;15481278339088384UL;15481308403466240UL;15481132310134784UL;15481286929154048UL;15481140899151872UL;15481218209021952UL;15481334172811265UL;15481424370270210UL;15481265454841856UL;15481213915496448UL;15481248275169280UL;15481351353794561UL;15481338467844097UL;15481347057647617UL;15481364238958593UL;15481239683727360UL;15481261158760448UL;15481222503923712UL;15481145196281856UL;15762654536859648UL;16044352851935233UL;16044228297949184UL;16325630254186498UL;16325587304513538UL;16325625959219202UL;16325574419611650UL;16325720448499714UL;16325613074317314UL;16325621664251906UL;16325591599480834UL;16325741923336194UL;16325656023990274UL;16325595894448130UL;16325608779350018UL;16325617369284610UL;16325716153532418UL;16325737628368898UL;16325604484382722UL;16325578714578946UL;16325600189415426UL;16325583009546242UL;16607027923124224UL;16607268445749249UL;16607242669326337UL;16607238374686721UL;16607234079653889UL;16607186835996672UL;16607246964490241UL;16607173951684608UL;16607255554293761UL;16607178248814592UL;16607229785866241UL;16607036512075776UL;16607040805994496UL;16607264145801217UL;16607045103124480UL;16607169655734272UL;16607165361684480UL;16607032216977408UL;16607225493585921UL;16607259849588737UL;16607208310308864UL;16607251260637185UL;16888713351397377UL;16888640338395136UL;16888739127558145UL;16888721941200897UL;16888520079835136UL;16888734826299393UL;16888717646036993UL;16888730531004417UL;16888700470296577UL;16888661812707328UL;16888726237347841UL;16888648928395264UL;16888511488786432UL;16888515782705152UL;16888507193688064UL;16888653225525248UL;16888502899834880UL;16888644632444928UL;16888709056364545UL;16888704762576897UL;17170016529743874UL;17170145378762754UL;17170162558631938UL;17170038004580354UL;17170033709613058UL;17170029414645762UL;17170025119678466UL;17170080954253314UL;17170055184449538UL;17170050889482242UL;17170046594514946UL;17170141083795458UL;17169999349874690UL;17170166853599234UL;17170012234776578UL;17170003644841986UL;17170007939809282UL;17170042299547650UL;17170020824711170UL;17451521570832386UL;17451637534949378UL;17451474326192130UL;17451487211094018UL;17451504390963202UL;17451482916126722UL;17451512980897794UL;17451495801028610UL;17451620355080194UL;17451478621159426UL;17451633245159424UL;17451517275865090UL;17451611765145602UL;17451491506061314UL;17451525865799682UL;17451616060112898UL;17451534459338752UL;17451508685930498UL;17451500095995906UL;17451530160766978UL;17733091043311616UL;18014561723219968UL;18014480114253826UL;18014450049482754UL;18014471524319234UL;18014591783403522UL;18014570308567042UL;18014428574646274UL;18014462934384642UL;18014475819286530UL;18014441459548162UL;18014454344450050UL;18014437164580866UL;18014505884057602UL;18014587488436226UL;18014467229351938UL;18014424279678978UL;18014445754515458UL;18014458639417346UL;18014566013599746UL;18014432869613570UL;18296156960915457UL;18296032406077440UL;18295959389536258UL;18577558916628481UL;18577511672971264UL;18577365642969088UL;18577571808149505UL;18577498788659200UL;18577503084544000UL;18577563211661313UL;18577494492708864UL;18577490198659072UL;18577361349050368UL;18577550330560513UL;18577352760098816UL;18577554622840833UL;18577369940099072UL;18577567506300929UL;18577357053952000UL;18858930820808704UL;18858905047334912UL;19140397203128322UL;19140431562866690UL;19140388613193730UL;19140392908161026UL;19140474512539650UL;19140315598749698UL;19140478807506946UL;19140599066591234UL;19140401498095618UL;19140427267899394UL;19140435857833986UL;19140483102474242UL;19140461627637762UL;19140307008815106UL;19140319893716994UL;19140345663520770UL;19140302713847810UL;19140311303782402UL;19140414382997506UL;19140448742735874UL;19140410088030210UL;19140444447768578UL;19140422972932098UL;19140440152801282UL;19140453037703170UL;19421953788739584UL;19703428761911298UL;19703549020995586UL;19984740526522368UL;19984972456525825UL;19984873672212480UL;19984860786130944UL;19984826427244544UL;19984731937505280UL;19985023997771778UL;19984925212082177UL;19984736232603648UL;19984903738687490UL;19984856494899202UL;19984959570116609UL;19984908030836736UL;19984993936539649UL;19984839311097856UL;19984929506394113UL;19984744823652352UL;19984813542866944UL;19984886556524544UL;19984822131294208UL;19984847902539776UL;19984865082212352UL;19984817836392448UL;19984955274821633UL;19984942389854209UL;19984899441885184UL;19984727643652096UL;19984852196851712UL;19984950981165057UL;19984976754180097UL;19984877966458880UL;19984946685018113UL;19984968161230849UL;19984963866329089UL;19984933800181761UL;19984770592079872UL;19985011110313985UL;19984869376262144UL;19984938095214593UL;20266387308937216UL;20547694777073664UL;20547827921518592UL;20547875167535105UL;20547888048635905UL;20547681890926592UL;20547836509945856UL;20547677597073408UL;20547819329683456UL;20547883753603073UL;20547686186024960UL;20547909530353665UL;20547905228242945UL;20547900934586369UL;20547823625633792UL;20547879459815425UL;20547815035633664UL;20547690479943680UL;20547896638439425UL;20547892343275521UL;20829152574373890UL;20829156869341186UL;20829332963000322UL;20829311488163842UL;20829290013327362UL;20829298603261954UL;20829328668033026UL;20829169754243074UL;20829264243523586UL;20829259948556290UL;20829247063654402UL;20829294308294658UL;20829242768687106UL;20829285718360066UL;20829448927117314UL;20829165459275778UL;20829302898229250UL;20829238473719810UL;20829281423392770UL;20829277128425474UL;20829161164308482UL;20829272833458178UL;20829251358621698UL;20829195524046850UL;20829324373065730UL;21110777874939904UL;21110769283104768UL;21110786463367168UL;21110764989054976UL;21110773579055104UL;21110825124102145UL;21392317273407489UL;21392261440077824UL;21392115410075648UL;21392239965765632UL;21392265736945666UL;21392244259815424UL;21392312978767873UL;21392321568571393UL;21392334460616705UL;21392325864718337UL;21392119707205632UL;21392252851650560UL;21392355935584257UL;21392248555765760UL;21392106821058560UL;21392102527205376UL;21392304389947393UL;21392300097667073UL;21392308683735041UL;21392111116156928UL;21392360230486017UL;21392330158374913UL;21673745005936642UL;21673680581427202UL;21673740710969346UL;21673620451885058UL;21673603272015874UL;21673641926721538UL;21673624746852354UL;21673611861950466UL;21673607566983170UL;21673616156917762UL;21673654811623426UL;21673766480773122UL;21673762185805826UL;21673650516656130UL;21673633336786946UL;21673646221688834UL;21673598977048578UL;21673637631754242UL;21673629041819650UL;21955095428726786UL;21955219982778370UL;21955086838792194UL;21955215687811074UL;21955073953890306UL;21955241457614850UL;21955125493497858UL;21955099723694082UL;21955121198530562UL;21955155558268930UL;21955129788465154UL;21955116903563266UL;21955104018661378UL;21955091133759490UL;21955078248857602UL;21955112608595970UL;21955237162647554UL;21955082543824898UL;21955108313628674UL;22236604765896706UL;22236566113026048UL;22236690665242626UL;22236716435046402UL;22236591880994818UL;22236596175962114UL;22236630535700482UL;22236694960209922UL;22236574701125634UL;22236561818124288UL;22236583291060226UL;22236712140079106UL;22236578996092930UL;22236600470929410UL;22236570406158338UL;22236587586027522UL;22518062562869250UL;22518053972934658UL;22518058267901954UL;22518079742738434UL;22518066857836546UL;22518165642084354UL;22518191411888130UL;22518169937051650UL;22518041089736704UL;22518075447771138UL;22518049677967362UL;22518071152803842UL;22518045383000066UL;22518036794834944UL;22518187116920834UL;22518105512542210UL;22799541834350594UL;22799644913565698UL;22799546129317890UL;22799533244416002UL;22799640618598402UL;22799537539383298UL;22799554719252482UL;22799520359514114UL;22799666388402178UL;22799662093434882UL;22799511771545600UL;22799550424285186UL;22799524654481410UL;22799516066447360UL;22799528949448706UL;22799580489056258UL;23080991043158016UL;23080986748256256UL;23081016811192322UL;23081008221257730UL;23081115595440130UL;23080999631323138UL;23081137070276610UL;23081029696094210UL;23081021106159618UL;23081055465897986UL;23081012516225026UL;23080995336355842UL;23081119890407426UL;23081141365243906UL;23081003926290434UL;23081025401126914UL;23362530443132930UL;23362500378361858UL;23362616342478850UL;23362590572675074UL;23362594867642370UL;23362504673329154UL;23362496085753856UL;23362612047511554UL;23644039779450880UL;23644108497420289UL;23644117087092737UL;23644112792453121UL;23644061253763072UL;23643906634743808UL;23644099911352321UL;23643902340890624UL;23644134267355137UL;23643915223760896UL;23644125678403585UL;23644142864433153UL;23644104203632641UL;23644048369451008UL;23644138563567617UL;23644129972060161UL;23644121382256641UL;23643910929842176UL;23644044073500672UL;23644082728075264UL;23643919520890880UL;23644052666580992UL;23925480396226562UL;23925450331455490UL;23925544820736002UL;23925428857470976UL;23925566295572482UL;23925433152372736UL;23925454626422786UL;23925441741520898UL;23925437446553602UL;23925424562569216UL;23925562000605186UL;23925420267667456UL;23925540525768706UL;23925446036488194UL;24206925308231682UL;24206903834181632UL;24206899539279872UL;24207019797512194UL;24207015502544898UL;24206908129083392UL;24206921013264386UL;24206955373002754UL;24206912423329794UL;24206916718297090UL;24206895244378112UL;24206929603198978UL;24207041272348674UL;24207036977381378UL;24488357334417410UL;24488370219319298UL;24488361629384706UL;24488404579057666UL;24488353039450114UL;24488374514286594UL;24488494773370882UL;24488430348861442UL;24488490478403586UL;24488383104221186UL;24488365924352002UL;24488378809253890UL;24488516248207362UL;24488395989123074UL;24488511953240066UL;24488387399188482UL;24488400284090370UL;24488391694155778UL;24488348744482818UL;24769965455245314UL;24769832311259138UL;24769836606226434UL;24769866670997506UL;24769879555899394UL;24769991225049090UL;24769828016291842UL;24769858081062914UL;24769849491128322UL;24769840901193730UL;24769905325703170UL;24769875260932098UL;24769969750212610UL;24769823721324546UL;24769853786095618UL;24769870965964802UL;24769862376030210UL;24769845196161026UL;24769986930081794UL;25051298697969666UL;25051350237577218UL;25051345942609922UL;25051341647642626UL;25051354532544514UL;25051466201694210UL;25051461906726914UL;25051444726857730UL;25051315877838850UL;25051311582871554UL;25051302992936962UL;25051307287904258UL;25051320172806146UL;25051324467773442UL;25051328762740738UL;25051333057708034UL;25051337352675330UL;25051380302348290UL;25051440431890434UL;25332799444746242UL;25332825214550018UL;25332915408863234UL;25332829509517314UL;25332941178667010UL;25332803739713538UL;25332820919582722UL;25332777971875840UL;25332936883699714UL;25332795149778946UL;25332773676777472UL;25332816624615426UL;25332812329648130UL;25332808034680834UL;25332782266777600UL;25332919703830530UL;25332855279321090UL;25332790854811650UL;25332786559844354UL;25614278716358658UL;25614265831456770UL;25614274421391362UL;25614295896227842UL;25614270126424066UL;25614283011325954UL;25614287306293250UL;25614394680475650UL;25614257243488256UL;25614416155312130UL;25614248653488128UL;25614252948586496UL;25614300191195138UL;25614411860344834UL;25614291601260546UL;25614261536489474UL;25614304486162434UL;25614390385508354UL;25614330255966210UL;25895805233659906UL;25895886838038530UL;25895891133005826UL;25895865363202050UL;25895775169478656UL;25895779463856130UL;25895869658169346UL;26177267324026880UL;26177220079714304UL;26177271618928640UL;26177421949861889UL;26177263030501376UL;26458733717880832UL;26740221574905858UL;26740268819546114UL;26740170035298306UL;26740303179284482UL;26740238754775042UL;26740251639676930UL;26740131380592642UL;26740139970527234UL;26740273114513410UL;26740260229611522UL;26740217279938562UL;26740225869873154UL;26740307474251778UL;26740298884317186UL;26740247344709634UL;26740135675559938UL;26740423438368770UL;26740264524578818UL;26740127085625346UL;26740212984971266UL;26740255934644226UL;26740285999415298UL;26740234459807746UL;26740144265494530UL;26740277409480706UL;27021739505942528UL;27303261727358976UL;27584848369942530UL;27866155842732034UL;27866207382339586UL;27866215972274178UL;27866108598091778UL;27866220267241474UL;28147695247491072UL;28429131567661056UL;28429256123613185UL;28429165925302274UL;28429170220269570UL;28710636611108864UL;28992111581986818UL;28992090107150338UL;28992094402117634UL;29273560786665474UL;29273504952090626UL;29273466297384962UL;29273401872875522UL;29273547901763586UL;29273487772221442UL;29273569376600066UL;29273444822548482UL;29273423347712002UL;29273496362156034UL;29273522131959810UL;29273590851436546UL;29273509247057922UL;29273453412483074UL;29273479182286850UL;29273565081632770UL;29273500657123330UL;29273406167842818UL;29273573671567362UL;29273410462810114UL;29273470592352258UL;29273526426927106UL;29273698225618946UL;29273436232613890UL;29273543606796290UL;29273457707450370UL;29273586556469250UL;29273539311828994UL;29273552196730882UL;29273427642679298UL;29273462002417666UL;29273440527581186UL;29273431937646594UL;29273517836992514UL;29273582261501954UL;29273414757777410UL;29273474887319554UL;29273449117515778UL;29273530721894402UL;29273577966534658UL;29273535016861698UL;29273513542025218UL;29273492067188738UL;29273419052744706UL;29554958462091264UL;29836424842575874UL;29836429137543170UL;29836519331856386UL;29836416253755392UL;29836540806692866UL;29836420547608578UL;29836515036889090UL;29836454907346946UL;29836536511725570UL;29836411958722560UL;30117964243795968UL;30118110271897601UL;30117998603468800UL;30118024373665793UL;30118041551437825UL;30117839688105984UL;30118075919302657UL;30117985718108160UL;30117938472681472UL;30118007192420352UL;30118058731700225UL;30117921292877824UL;30118037256798209UL;30117968537845760UL;30118032961765377UL;30117831099088896UL;30117951358435328UL;30117977128042496UL;30117916997976064UL;30118045846601729UL;30117912704450560UL;30117835394187264UL;30118071618109441UL;30117955656482818UL;30118067322814465UL;30117959947714560UL;30118028667977729UL;30118050142748673UL;30118063027912705UL;30117826805235712UL;30118054436405249UL;30117947064123392UL;30117869753663488UL;30117925588828160UL;30117843985235968UL;30117972833796096UL;30399439221424130UL;30399413451620354UL;30399426336522242UL;30399344732143618UL;30399477876129794UL;30399422041554946UL;30399473581162498UL;30399460696260610UL;30399318962339842UL;30399387681816578UL;30399434926456834UL;30399301782470658UL;30399430631489538UL;30399400566718466UL;30399314667372546UL;30399396271751170UL;30399391976783874UL;30399482171097090UL;30399409156653058UL;30399452106326018UL;30399310372405250UL;30399306077437954UL;30399447811358722UL;30399443516391426UL;30399598135214082UL;30680952853757954UL;30681073112842242UL;30962445010993154UL;30962380586483714UL;30962432126091266UL;30962333341843458UL;30962440716025858UL;31243889926864896UL;31243804022603776UL;31525201690296322UL;31525343424217090UL;31525313359446018UL;31525330539315202UL;31525326244347906UL;31525390670036992UL;31525214575198210UL;31525287589642242UL;31525339129249794UL;31525309064478722UL;31525386373890050UL;31525210280230914UL;31525382078922754UL;31525373488988162UL;31525472277823489UL;31525334834282498UL;31525498043039746UL;31525347719184386UL;31525352014151682UL;31525205985263618UL;31525218870165506UL;31525291884609538UL;31525244639969282UL;31525377783955458UL;31525300474544130UL;31525360604086274UL;31525296179576834UL;31525321949380610UL;31806839875371010UL;31806865650221056UL;31806753976025088UL;32088314852016130UL;32369789833904128UL;32651286285516800UL;32932765552738306UL;32932769847705602UL;32932658178555906UL;32932756963459072UL;33214210461925376UL;33214197577613312UL;33214188987613184UL;33214249123905537UL;33214193281662976UL;33214201873498112UL;33495711215779840UL;33777186186264578UL;33777164711428098UL;33777169006395394UL;34058601032384512UL;34058566671925248UL;34058489362055168UL;34058596738072576UL;34058648277417984UL;34058476479184896UL;34058485068136448UL;34058725593776129UL;34058493659185152UL;34058575262777344UL;34058609621663744UL;34058704110354433UL;34058570966827008UL;34058562378399744UL;34058708405649409UL;34058605330432002UL;34058588146630656UL;34058759945846785UL;34058519427612672UL;34058626801991680UL;34058682635714561UL;34058695520550913UL;34058674047614977UL;34058712701861889UL;34058716996763649UL;34058699816697857UL;34058613917745152UL;34058691225387009UL;34058622507745280UL;34058480773038080UL;34058635392057344UL;34058656866369536UL;34058686930747393UL;34058618211794944UL;34058678341926913UL;34058721292058625UL;34340140441010176UL;34340144731062274UL;34621456495411202UL;34621486560182274UL;34621469380313090UL;34621473675280386UL;34621495150116866UL;34621460790378498UL;34621452200443906UL;34621503740051458UL;34621447905476610UL;34621465085345794UL;34621482265214978UL;34621477970247682UL;34621508043603968UL;34621615409201154UL;34621593934364674UL;34621585344430082UL;34621499445084162UL;34621490855149570UL;34903047437877248UL;34903129040486401UL;34903043141926912UL;34903073207549952UL;34903150524104705UL;34903137631993857UL;34902914292187136UL;34902909998268416UL;34903124746829825UL;34902991602057216UL;34903107565846529UL;34902901409316864UL;34902918589317120UL;34903098977746945UL;34903081796501504UL;34903184875978753UL;34903111860879361UL;34903000192909312UL;34903013076762624UL;34903034551795712UL;34903116155518977UL;34903141926895617UL;34903021668204544UL;34903025962516480UL;34902987308531712UL;34902995896958976UL;34903030260563970UL;34903051732123648UL;34903103272058881UL;34903060322189312UL;34902905703170048UL;34903120450682881UL;34902944357744640UL;34903146222190593UL;34903133335781377UL;34903038847877120UL;35184483766960128UL;35465984505217024UL;35466066108940289UL;35465950146330624UL;35465941555478528UL;35466087585415169UL;35466078993907713UL;35465993095348224UL;35465975915937792UL;35465980213985282UL;35466053225480193UL;35465859951689728UL;35465894311165952UL;35466023160971264UL;35466091880316929UL;35465945850380288UL;35465851362738176UL;35466010275610624UL;35465868542738432UL;35465937261953024UL;35465864245608448UL;35466061814300673UL;35466074700251137UL;35465963030183936UL;35466048931168257UL;35465997391298560UL;35466001685544960UL;35465971621625856UL;35466100477657089UL;35466083289202689UL;35466096175611905UL;35466057519267841UL;35466134829400065UL;35465988801298432UL;35466070404104193UL;35465855656591360UL;35466031749922816UL;35747463779975170UL;35747446600105986UL;35747425125269506UL;35747326341021698UL;35747455190040578UL;35747416535334914UL;35747506729648130UL;35747369290694658UL;35747468074942466UL;35747450895073282UL;35747438010171394UL;35747498139713538UL;35747502434680834UL;35747476664877058UL;35747339225923586UL;35747472369909762UL;35747433715204098UL;35747485254811650UL;35747330635988994UL;35747622693765122UL;35747420830302210UL;35747412240367618UL;35747459485007874UL;35747511024615426UL;35747343520890882UL;35747334930956290UL;36029028947329025UL;36028943048769536UL;36028818496159744UL;36029020357525505UL;36029059021078529UL;36029011767721985UL;36028951640604672UL;36028938754719744UL;36028801316159488UL;36028814199029760UL;36028960229031936UL;36029033249570817UL;36028947344719872UL;36028998886621185UL;36029024653672449UL;36028805610012672UL;36029016062361601UL;36029007472689153UL;36028809905111040UL;36029003178901505UL;36310314946134018UL;36310465269989378UL;36310379370643458UL;36310319241101314UL;36310349305872386UL;36310310651166722UL;36310332126003202UL;36310439500185602UL;36310297766264834UL;36310323536068610UL;36310345010905090UL;36310340715937794UL;36310443795152898UL;36310353600839682UL;36310336420970498UL;36310306356199426UL;36310327831035906UL;36310460975022082UL;36310302061232130UL;36591751267614722UL;36591755562582018UL;36591893001535490UL;36591871526699010UL;36591897296502786UL;36591759857549314UL;36591875821666306UL;36591888706568194UL;36591854346829826UL;36591935951208450UL;36591811397156866UL;36591789922320386UL;36591858641797122UL;36591777037418498UL;36591880116633602UL;36591850051862530UL;36591845756895234UL;36591923066306562UL;36591927361273858UL;36591781332385794UL;36591867231731714UL;36591884411600898UL;36591768447483906UL;36591841461927938UL;36591918771339266UL;36591819987091458UL;36591940246175746UL;36591914476371970UL;36592047620358146UL;36591798512254978UL;36591931656241154UL;36591837166960642UL;36591910181404674UL;36591828577026050UL;36591772742451202UL;36591802807222274UL;36591901591470082UL;36591862936764418UL;36591807102189570UL;36591764152516610UL;36591794217287682UL;36591824282058754UL;36591815692124162UL;36591785627353090UL;36873342217355264UL;37154885906857986UL;37154864432021506UL;37154868726988802UL;37436270689779714UL;37436309344485378UL;37436193380368386UL;37436262099845122UL;37436347999191042UL;37436274984747010UL;37436176200499202UL;37436472553242626UL;37436283574681602UL;37436322229387266UL;37436287869648898UL;37436356589125634UL;37436335114289154UL;37436300754550786UL;37436296459583490UL;37436313639452674UL;37436189085401090UL;37436326524354562UL;37436317934419970UL;37436352294158338UL;37436219150172162UL;37436184790433794UL;37436266394812418UL;37436305049518082UL;37436180495466498UL;37717801504669696UL;37717926061342721UL;37999272181694464UL;37999276477579264UL;37999323728707585UL;37999267885744128UL;37999285066006528UL;37999263591694336UL;38280687029846018UL;38280738569453570UL;38280725684551682UL;38280781519126530UL;38280618310369282UL;38280708504682498UL;38280734274486274UL;38280644080173058UL;38280742864420866UL;38280747159388162UL;38280691324813314UL;38280695619780610UL;38280897483243522UL;38280605425467394UL;38280614015401986UL;38280777224159234UL;38280699914747906UL;38280721389584386UL;38280760044290050UL;38280729979518978UL;38280712799649794UL;38280609720434690UL;38280772929191938UL;38280601130500098UL;38280751454355458UL;38562162005770240UL;38562320919429121UL;38562187774001152UL;38562084695506944UL;38562174890147840UL;38562235019427840UL;38562295147921409UL;38562256493740032UL;38562213545115648UL;38562282263085057UL;38562277969297409UL;38562166299295744UL;38562204957802498UL;38562209249034240UL;38562076106555392UL;38562325221801985UL;38562226429362176UL;38562088989425664UL;38562273674985473UL;38562119054983168UL;38562286558117889UL;38562080400408576UL;38562247904788480UL;38562359573217281UL;38562299444068353UL;38562303737724929UL;38562196365443072UL;38562222135115776UL;38562312329232385UL;38562308033019905UL;38562093286555648UL;38562290852757505UL;38562217839165440UL;38562200659755008UL;38562170594197504UL;38562316624134145UL;38843555378692098UL;38843692817645570UL;38843594033397762UL;38843649867972610UL;38843701407580162UL;38843636983070722UL;38843727177383938UL;38843568263593986UL;38843684227710978UL;38843731472351234UL;38843662752874498UL;38843645573005314UL;38843671342809090UL;38843847436468226UL;38843563968626690UL;38843658457907202UL;38843679932743682UL;38843559673659394UL;38843722882416642UL;38843675637776386UL;38843641278038018UL;38843688522678274UL;38843709997514754UL;38843551083724802UL;38843697112612866UL;39125189269913602UL;39406724374200321UL;39406715782889473UL;39406513919557632UL;39406698605117441UL;39406672834920448UL;39406707193217025UL;39406612704133120UL;39406543985115136UL;39406741554266113UL;39406728667856897UL;39406651359494144UL;39406509625638912UL;39406638475247616UL;39406634179166208UL;39406647065247744UL;39406732963151873UL;39406629887934466UL;39406505330540544UL;39406681423872000UL;39406625589886976UL;39406659949559808UL;39406586935902208UL;39406621295575040UL;39406711488249857UL;39406591229427712UL;39406599820279808UL;39406595524329472UL;39406518216687616UL;39406501036687360UL;39406737259364353UL;39406642769297408UL;39406784503349249UL;39406745849561089UL;39406750151999489UL;39406720078053377UL;39406702899429377UL;39688169288630274UL;39969618501107712UL;40251071996100610UL;40251222319955970UL;40251020456493058UL;40251063406166018UL;40251084881002498UL;40251106355838978UL;40251037636362242UL;40251102060871682UL;40251024751460354UL;40251050521264130UL;40251016161525762UL;40250930262179842UL;40250938852114434UL;40251076291067906UL;40251011866558466UL;40251059111198722UL;40250943147081730UL;40251097765904386UL;40250925967212546UL;40251067701133314UL;40250968916885506UL;40251054816231426UL;40251033341394946UL;40251046226296834UL;40250934557147138UL;40532486843596802UL;40532521203335170UL;40532443893923842UL;40532529793269762UL;40532546973138946UL;40532405239218178UL;40532559858040834UL;40532409534185474UL;40532534088237058UL;40532491138564098UL;40532400944250882UL;40532499728498690UL;40532413829152770UL;40532542678171650UL;40532581332877314UL;40532495433531394UL;40532512613400578UL;40532551268106242UL;40532697296994306UL;40532508318433282UL;40532525498302466UL;40532577037910018UL;40532418124120066UL;40532538383204354UL;40532572742942722UL;40813875921092610UL;40813974705340418UL;40813884511027202UL;40814017655013378UL;40813996180176898UL;40814009065078786UL;40814047719784450UL;40813880216059906UL;40814004770111490UL;40813918870765570UL;40813966115405826UL;40813987590242306UL;40814052014751746UL;40813893100961794UL;40814013360046082UL;40814026244947970UL;40814021949980674UL;40813888805994498UL;40813961820438530UL;40814172273836034UL;40813983295275010UL;40814000475144194UL;40814056309719042UL;40814034834882562UL;40813970410373122UL; |];


//Enum for return values 
type FLTypeDUnion = | Enumvariant_1 of unit | Enumvariant_25 of lrtype | Enumvariant_4 of float | Enumvariant_3 of int | Enumvariant_2 of int*int | Enumvariant_0 of expr | Enumvariant_19 of expr list | Enumvariant_22 of LBox<expr> list | Enumvariant_23 of (lrtype*string) list | Enumvariant_6 of string ;;

let _rrsemaction_0_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, e:expr, _item2_:expr) =  e 

let _rrsemaction_1_(parser:RTParser<FLTypeDUnion,unit>, i:int) =  Integer(i) 

let _rrsemaction_2_(parser:RTParser<FLTypeDUnion,unit>, f:float) =  Floatpt(f) 

let _rrsemaction_3_(parser:RTParser<FLTypeDUnion,unit>, s:string) =  Strlit(s) 

let _rrsemaction_4_(parser:RTParser<FLTypeDUnion,unit>, v:string, _item1_:expr, e:expr, _item3_:expr) =  VectorGet(v,e) 

let _rrsemaction_5_(parser:RTParser<FLTypeDUnion,unit>, v:string) =  Var(v) 

let _rrsemaction_6_(parser:RTParser<FLTypeDUnion,unit>, a:expr) =  a 

let _rrsemaction_7_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, a:expr) =  Uniop("~",a) 

let _rrsemaction_8_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, a:expr) =  Uniop("car",a) 

let _rrsemaction_9_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, a:expr) =  Uniop("cdr",a) 

let _rrsemaction_10_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, a:expr) =  Uniop("!",a) 

let _rrsemaction_11_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, a:expr) =  Uniop("print",a) 

let _rrsemaction_12_(parser:RTParser<FLTypeDUnion,unit>, a:expr, _item1_:expr, aL:expr list, _item3_:expr) =  Apply(a,aL) 

let _rrsemaction_13_(parser:RTParser<FLTypeDUnion,unit>, c:expr, _item1_:expr, b:expr) =  Binop("*",c,b) 

let _rrsemaction_14_(parser:RTParser<FLTypeDUnion,unit>, c:expr, _item1_:expr, b:expr) =  Binop("/",c,b) 

let _rrsemaction_15_(parser:RTParser<FLTypeDUnion,unit>, c:expr, _item1_:expr, b:expr) =  Binop("%",c,b) 

let _rrsemaction_16_(parser:RTParser<FLTypeDUnion,unit>, b:expr) =  b 

let _rrsemaction_17_(parser:RTParser<FLTypeDUnion,unit>, d:expr, _item1_:expr, c:expr) =  Binop("+",d,c) 

let _rrsemaction_18_(parser:RTParser<FLTypeDUnion,unit>, d:expr, _item1_:expr, c:expr) =  Binop("-",d,c) 

let _rrsemaction_19_(parser:RTParser<FLTypeDUnion,unit>, c:expr) =  c 

let _rrsemaction_20_(parser:RTParser<FLTypeDUnion,unit>, e:expr, _item1_:expr, d:expr) =  Binop("<=",e,d) 

let _rrsemaction_21_(parser:RTParser<FLTypeDUnion,unit>, e:expr, _item1_:expr, d:expr) =  Binop(">=",e,d) 

let _rrsemaction_22_(parser:RTParser<FLTypeDUnion,unit>, e:expr, _item1_:expr, d:expr) =  Binop("<",e,d) 

let _rrsemaction_23_(parser:RTParser<FLTypeDUnion,unit>, e:expr, _item1_:expr, d:expr) =  Binop(">",e,d) 

let _rrsemaction_24_(parser:RTParser<FLTypeDUnion,unit>, d:expr) =  d 

let _rrsemaction_25_(parser:RTParser<FLTypeDUnion,unit>, f:expr, _item1_:expr, e:expr) =  Binop("==",f,e) 

let _rrsemaction_26_(parser:RTParser<FLTypeDUnion,unit>, f:expr, _item1_:expr, e:expr) =  Binop("!=",f,e) 

let _rrsemaction_27_(parser:RTParser<FLTypeDUnion,unit>, e:expr) =  e 

let _rrsemaction_28_(parser:RTParser<FLTypeDUnion,unit>, g:expr, _item1_:expr, f:expr) =  Binop("^",g,f) 

let _rrsemaction_29_(parser:RTParser<FLTypeDUnion,unit>, f:expr) =  f 

let _rrsemaction_30_(parser:RTParser<FLTypeDUnion,unit>, h:expr, _item1_:expr, g:expr) =  Binop("&&",h,g) 

let _rrsemaction_31_(parser:RTParser<FLTypeDUnion,unit>, g:expr) =  g 

let _rrsemaction_32_(parser:RTParser<FLTypeDUnion,unit>, i:expr, _item1_:expr, h:expr) =  Binop("||",i,h) 

let _rrsemaction_33_(parser:RTParser<FLTypeDUnion,unit>, h:expr) =  h 

let _rrsemaction_34_(parser:RTParser<FLTypeDUnion,unit>, v:LBox<string>, _item1_:expr, i:expr) =  Setq(v,i) 

let _rrsemaction_35_(parser:RTParser<FLTypeDUnion,unit>, i:expr) =  i 

let _rrsemaction_36_(parser:RTParser<FLTypeDUnion,unit>, j:expr) =  j 

let _rrsemaction_37_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, a:LBox<expr>, aL:LBox<expr> list, _item3_:expr) =  Vector(a::aL) 

let _rrsemaction_38_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, a:LBox<expr>, _item2_:expr, i:int, _item4_:expr) =  Vector([for x in 1 .. i -> a]) 

let _rrsemaction_39_(parser:RTParser<FLTypeDUnion,unit>, e:expr, _item1_:expr) =  e 

let _rrsemaction_40_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, cond:expr, _item2_:expr, iE:expr, _item4_:expr, eE:expr) =  Ifelse(cond,iE,eE) 

let _rrsemaction_41_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, _item1_:expr, cond:expr, _item3_:expr, doE:expr) =  Whileloop(cond,doE) 

let _rrsemaction_42_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, sL:LBox<expr> list, _item2_:expr) =  Beginseq(sL) 

let _rrsemaction_43_(parser:RTParser<FLTypeDUnion,unit>, a:LBox<expr>, aL:LBox<expr> list) =  Sequence(a::aL) 

let _rrsemaction_44_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, v:LBox<string>, t:lrtype, _item3_:expr, s:expr) = 
  match t with
  | LRuntypable -> Error
  | LRunknown -> Define(v,s)
  | _ -> TypedDefine(lbox((t,v.value),v.line,v.column),s)


let _rrsemaction_45_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, v:LBox<string>, t:lrtype, _item3_:expr, a:expr, _item5_:expr, doE:LBox<expr>) = 
  match t with
  | LRuntypable -> Error
  | LRunknown -> Let(v,a,doE)
  | _ -> TypedLet(lbox((t,v.value),v.line,v.column),a,doE)


let _rrsemaction_46_(parser:RTParser<FLTypeDUnion,unit>, t:lrtype, _item1_:expr, mL:(lrtype*string) list, _item3_:expr, s:LBox<expr>) =  TypedLambda(mL,t,s) 

let _rrsemaction_47_(parser:RTParser<FLTypeDUnion,unit>, v:string, _item1_:expr, e:expr, _item3_:expr, _item4_:expr, value:expr, _item6_:expr) =  VectorSet(v,e,value) 

let _rrsemaction_48_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, v:string, _item2_:expr) =  Export(v) 

let _rrsemaction_49_(parser:RTParser<FLTypeDUnion,unit>) =  [] 

let _rrsemaction_50_(parser:RTParser<FLTypeDUnion,unit>, c:expr list) =  c 

let _rrsemaction_51_(parser:RTParser<FLTypeDUnion,unit>, a:expr) =  [a] 

let _rrsemaction_52_(parser:RTParser<FLTypeDUnion,unit>, a:expr, _item1_:expr, vLBox:expr list) =  a::vLBox 

let _rrsemaction_53_(parser:RTParser<FLTypeDUnion,unit>) =  [] 

let _rrsemaction_54_(parser:RTParser<FLTypeDUnion,unit>, c:LBox<expr> list) =  c 

let _rrsemaction_55_(parser:RTParser<FLTypeDUnion,unit>, s:LBox<expr>) =  [s] 

let _rrsemaction_56_(parser:RTParser<FLTypeDUnion,unit>, s:LBox<expr>, vLBox:LBox<expr> list) =  s::vLBox 

let _rrsemaction_57_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, a:LBox<expr>) =  [a] 

let _rrsemaction_58_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, a:LBox<expr>, vLBox:LBox<expr> list) =  a::vLBox 

let _rrsemaction_59_(parser:RTParser<FLTypeDUnion,unit>, v:string, t:lrtype) =  [(t,v)] 

let _rrsemaction_60_(parser:RTParser<FLTypeDUnion,unit>, v:string, t:lrtype, _item2_:expr, llist:(lrtype*string) list) =  (t,v)::llist 

let _rrsemaction_61_(parser:RTParser<FLTypeDUnion,unit>) =  LRunknown 

let _rrsemaction_62_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, t:lrtype) =  t 

let _rrsemaction_63_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr) =  LRint 

let _rrsemaction_64_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr) =  LRfloat 

let _rrsemaction_65_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr) =  LRstring 

let _rrsemaction_66_(parser:RTParser<FLTypeDUnion,unit>, t:lrtype, _item1_:expr, _item2_:expr) =  LRlist(t) 

let _rrsemaction_67_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr, v:string, _item2_:expr) =  LRclosure(([],LRunknown),v) 

let _rrsemaction_68_(parser:RTParser<FLTypeDUnion,unit>) =  LRunknown 

let _rrsemaction_69_(parser:RTParser<FLTypeDUnion,unit>, t:lrtype) =  t 

let _rrsemaction_70_(parser:RTParser<FLTypeDUnion,unit>, a:LBox<expr>, b:LBox<expr>, aL:LBox<expr> list) =  Sequence(a::b::aL) 

let _rrsemaction_71_(parser:RTParser<FLTypeDUnion,unit>, a:expr) =  a 

let _rrsemaction_72_(parser:RTParser<FLTypeDUnion,unit>) =  Nil 

let _rrsemaction_73_(parser:RTParser<FLTypeDUnion,unit>, _item0_:expr) =   Unchecked.defaultof<unit>

let make_parser() : RTParser<FLTypeDUnion,unit> =
  let parser1 = skeleton_parser(Unchecked.defaultof<unit>,74,146)
  let mutable rule = skeleton_production("")
  rule <- skeleton_production("Atom_")
  rule.action <- fun parser ->
    (let _item2_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let e = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_0_(parser,_item0_,e,_item2_)));
  parser1.Rules.[0] <- rule;
  rule <- skeleton_production("Atom_")
  rule.action <- fun parser ->
    (let i = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_3(_rr_3) ->  _rr_3 | _ -> Unchecked.defaultof<int>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_1_(parser,i)));
  parser1.Rules.[1] <- rule;
  rule <- skeleton_production("Atom_")
  rule.action <- fun parser ->
    (let f = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_4(_rr_4) ->  _rr_4 | _ -> Unchecked.defaultof<float>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_2_(parser,f)));
  parser1.Rules.[2] <- rule;
  rule <- skeleton_production("Atom_")
  rule.action <- fun parser ->
    (let s = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_6(_rr_6) ->  _rr_6 | _ -> Unchecked.defaultof<string>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_3_(parser,s)));
  parser1.Rules.[3] <- rule;
  rule <- skeleton_production("Atom_")
  rule.action <- fun parser ->
    (let _item3_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let e = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let v = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_6(_rr_6) ->  _rr_6 | _ -> Unchecked.defaultof<string>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_4_(parser,v,_item1_,e,_item3_)));
  parser1.Rules.[4] <- rule;
  rule <- skeleton_production("Atom_")
  rule.action <- fun parser ->
    (let v = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_6(_rr_6) ->  _rr_6 | _ -> Unchecked.defaultof<string>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_5_(parser,v)));
  parser1.Rules.[5] <- rule;
  rule <- skeleton_production("Btom_")
  rule.action <- fun parser ->
    (let a = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_6_(parser,a)));
  parser1.Rules.[6] <- rule;
  rule <- skeleton_production("Btom_")
  rule.action <- fun parser ->
    (let a = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_7_(parser,_item0_,a)));
  parser1.Rules.[7] <- rule;
  rule <- skeleton_production("Btom_")
  rule.action <- fun parser ->
    (let a = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_8_(parser,_item0_,a)));
  parser1.Rules.[8] <- rule;
  rule <- skeleton_production("Btom_")
  rule.action <- fun parser ->
    (let a = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_9_(parser,_item0_,a)));
  parser1.Rules.[9] <- rule;
  rule <- skeleton_production("Btom_")
  rule.action <- fun parser ->
    (let a = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_10_(parser,_item0_,a)));
  parser1.Rules.[10] <- rule;
  rule <- skeleton_production("Btom_")
  rule.action <- fun parser ->
    (let a = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_11_(parser,_item0_,a)));
  parser1.Rules.[11] <- rule;
  rule <- skeleton_production("Btom_")
  rule.action <- fun parser ->
    (let _item3_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let aL = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_19(_rr_19) ->  _rr_19 | _ -> Unchecked.defaultof<expr list>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let a = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_12_(parser,a,_item1_,aL,_item3_)));
  parser1.Rules.[12] <- rule;
  rule <- skeleton_production("Ctom_")
  rule.action <- fun parser ->
    (let b = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let c = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_13_(parser,c,_item1_,b)));
  parser1.Rules.[13] <- rule;
  rule <- skeleton_production("Ctom_")
  rule.action <- fun parser ->
    (let b = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let c = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_14_(parser,c,_item1_,b)));
  parser1.Rules.[14] <- rule;
  rule <- skeleton_production("Ctom_")
  rule.action <- fun parser ->
    (let b = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let c = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_15_(parser,c,_item1_,b)));
  parser1.Rules.[15] <- rule;
  rule <- skeleton_production("Ctom_")
  rule.action <- fun parser ->
    (let b = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_16_(parser,b)));
  parser1.Rules.[16] <- rule;
  rule <- skeleton_production("Dtom_")
  rule.action <- fun parser ->
    (let c = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let d = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_17_(parser,d,_item1_,c)));
  parser1.Rules.[17] <- rule;
  rule <- skeleton_production("Dtom_")
  rule.action <- fun parser ->
    (let c = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let d = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_18_(parser,d,_item1_,c)));
  parser1.Rules.[18] <- rule;
  rule <- skeleton_production("Dtom_")
  rule.action <- fun parser ->
    (let c = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_19_(parser,c)));
  parser1.Rules.[19] <- rule;
  rule <- skeleton_production("Etom_")
  rule.action <- fun parser ->
    (let d = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let e = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_20_(parser,e,_item1_,d)));
  parser1.Rules.[20] <- rule;
  rule <- skeleton_production("Etom_")
  rule.action <- fun parser ->
    (let d = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let e = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_21_(parser,e,_item1_,d)));
  parser1.Rules.[21] <- rule;
  rule <- skeleton_production("Etom_")
  rule.action <- fun parser ->
    (let d = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let e = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_22_(parser,e,_item1_,d)));
  parser1.Rules.[22] <- rule;
  rule <- skeleton_production("Etom_")
  rule.action <- fun parser ->
    (let d = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let e = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_23_(parser,e,_item1_,d)));
  parser1.Rules.[23] <- rule;
  rule <- skeleton_production("Etom_")
  rule.action <- fun parser ->
    (let d = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_24_(parser,d)));
  parser1.Rules.[24] <- rule;
  rule <- skeleton_production("Ftom_")
  rule.action <- fun parser ->
    (let e = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let f = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_25_(parser,f,_item1_,e)));
  parser1.Rules.[25] <- rule;
  rule <- skeleton_production("Ftom_")
  rule.action <- fun parser ->
    (let e = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let f = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_26_(parser,f,_item1_,e)));
  parser1.Rules.[26] <- rule;
  rule <- skeleton_production("Ftom_")
  rule.action <- fun parser ->
    (let e = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_27_(parser,e)));
  parser1.Rules.[27] <- rule;
  rule <- skeleton_production("Gtom_")
  rule.action <- fun parser ->
    (let f = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let g = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_28_(parser,g,_item1_,f)));
  parser1.Rules.[28] <- rule;
  rule <- skeleton_production("Gtom_")
  rule.action <- fun parser ->
    (let f = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_29_(parser,f)));
  parser1.Rules.[29] <- rule;
  rule <- skeleton_production("Htom_")
  rule.action <- fun parser ->
    (let g = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let h = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_30_(parser,h,_item1_,g)));
  parser1.Rules.[30] <- rule;
  rule <- skeleton_production("Htom_")
  rule.action <- fun parser ->
    (let g = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_31_(parser,g)));
  parser1.Rules.[31] <- rule;
  rule <- skeleton_production("Itom_")
  rule.action <- fun parser ->
    (let h = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let i = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_32_(parser,i,_item1_,h)));
  parser1.Rules.[32] <- rule;
  rule <- skeleton_production("Itom_")
  rule.action <- fun parser ->
    (let h = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_33_(parser,h)));
  parser1.Rules.[33] <- rule;
  rule <- skeleton_production("Jtom_")
  rule.action <- fun parser ->
    (let i = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let v_sitem = parser.Pop() in let v_val = (match v_sitem.svalue with | FLTypeDUnion.Enumvariant_6(_rr_6) ->  _rr_6 | _ -> Unchecked.defaultof<string>) in let v = lbox(v_val,v_sitem.line,v_sitem.column) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_34_(parser,v,_item1_,i)));
  parser1.Rules.[34] <- rule;
  rule <- skeleton_production("Jtom_")
  rule.action <- fun parser ->
    (let i = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_35_(parser,i)));
  parser1.Rules.[35] <- rule;
  rule <- skeleton_production("Expr_")
  rule.action <- fun parser ->
    (let j = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_36_(parser,j)));
  parser1.Rules.[36] <- rule;
  rule <- skeleton_production("Expr_")
  rule.action <- fun parser ->
    (let _item3_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let aL = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_22(_rr_22) ->  _rr_22 | _ -> Unchecked.defaultof<LBox<expr> list>) in let a_sitem = parser.Pop() in let a_val = (match a_sitem.svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let a = lbox(a_val,a_sitem.line,a_sitem.column) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_37_(parser,_item0_,a,aL,_item3_)));
  parser1.Rules.[37] <- rule;
  rule <- skeleton_production("Expr_")
  rule.action <- fun parser ->
    (let _item4_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let i = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_3(_rr_3) ->  _rr_3 | _ -> Unchecked.defaultof<int>) in let _item2_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let a_sitem = parser.Pop() in let a_val = (match a_sitem.svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let a = lbox(a_val,a_sitem.line,a_sitem.column) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_38_(parser,_item0_,a,_item2_,i,_item4_)));
  parser1.Rules.[38] <- rule;
  rule <- skeleton_production("Stmt_")
  rule.action <- fun parser ->
    (let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let e = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_39_(parser,e,_item1_)));
  parser1.Rules.[39] <- rule;
  rule <- skeleton_production("Stmt_")
  rule.action <- fun parser ->
    (let eE = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item4_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let iE = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item2_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let cond = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_40_(parser,_item0_,cond,_item2_,iE,_item4_,eE)));
  parser1.Rules.[40] <- rule;
  rule <- skeleton_production("Stmt_")
  rule.action <- fun parser ->
    (let doE = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item3_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let cond = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_41_(parser,_item0_,_item1_,cond,_item3_,doE)));
  parser1.Rules.[41] <- rule;
  rule <- skeleton_production("Stmt_")
  rule.action <- fun parser ->
    (let _item2_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let sL = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_22(_rr_22) ->  _rr_22 | _ -> Unchecked.defaultof<LBox<expr> list>) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_42_(parser,_item0_,sL,_item2_)));
  parser1.Rules.[42] <- rule;
  rule <- skeleton_production("Stmt_")
  rule.action <- fun parser ->
    (let aL = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_22(_rr_22) ->  _rr_22 | _ -> Unchecked.defaultof<LBox<expr> list>) in let a_sitem = parser.Pop() in let a_val = (match a_sitem.svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let a = lbox(a_val,a_sitem.line,a_sitem.column) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_43_(parser,a,aL)));
  parser1.Rules.[43] <- rule;
  rule <- skeleton_production("Stmt_")
  rule.action <- fun parser ->
    (let s = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item3_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let t = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_25(_rr_25) ->  _rr_25 | _ -> Unchecked.defaultof<lrtype>) in let v_sitem = parser.Pop() in let v_val = (match v_sitem.svalue with | FLTypeDUnion.Enumvariant_6(_rr_6) ->  _rr_6 | _ -> Unchecked.defaultof<string>) in let v = lbox(v_val,v_sitem.line,v_sitem.column) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_44_(parser,_item0_,v,t,_item3_,s)));
  parser1.Rules.[44] <- rule;
  rule <- skeleton_production("Stmt_")
  rule.action <- fun parser ->
    (let doE_sitem = parser.Pop() in let doE_val = (match doE_sitem.svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let doE = lbox(doE_val,doE_sitem.line,doE_sitem.column) in let _item5_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let a = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item3_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let t = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_25(_rr_25) ->  _rr_25 | _ -> Unchecked.defaultof<lrtype>) in let v_sitem = parser.Pop() in let v_val = (match v_sitem.svalue with | FLTypeDUnion.Enumvariant_6(_rr_6) ->  _rr_6 | _ -> Unchecked.defaultof<string>) in let v = lbox(v_val,v_sitem.line,v_sitem.column) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_45_(parser,_item0_,v,t,_item3_,a,_item5_,doE)));
  parser1.Rules.[45] <- rule;
  rule <- skeleton_production("Stmt_")
  rule.action <- fun parser ->
    (let s_sitem = parser.Pop() in let s_val = (match s_sitem.svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let s = lbox(s_val,s_sitem.line,s_sitem.column) in let _item3_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let mL = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_23(_rr_23) ->  _rr_23 | _ -> Unchecked.defaultof<(lrtype*string) list>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let t = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_25(_rr_25) ->  _rr_25 | _ -> Unchecked.defaultof<lrtype>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_46_(parser,t,_item1_,mL,_item3_,s)));
  parser1.Rules.[46] <- rule;
  rule <- skeleton_production("Stmt_")
  rule.action <- fun parser ->
    (let _item6_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let value = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item4_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item3_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let e = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let v = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_6(_rr_6) ->  _rr_6 | _ -> Unchecked.defaultof<string>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_47_(parser,v,_item1_,e,_item3_,_item4_,value,_item6_)));
  parser1.Rules.[47] <- rule;
  rule <- skeleton_production("Stmt_")
  rule.action <- fun parser ->
    (let _item2_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let v = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_6(_rr_6) ->  _rr_6 | _ -> Unchecked.defaultof<string>) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_48_(parser,_item0_,v,_item2_)));
  parser1.Rules.[48] <- rule;
  rule <- skeleton_production("ApplyList_")
  rule.action <- fun parser ->
    ( FLTypeDUnion.Enumvariant_19(_rrsemaction_49_(parser)));
  parser1.Rules.[49] <- rule;
  rule <- skeleton_production("ApplyList_")
  rule.action <- fun parser ->
    (let c = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_19(_rr_19) ->  _rr_19 | _ -> Unchecked.defaultof<expr list>) in  FLTypeDUnion.Enumvariant_19(_rrsemaction_50_(parser,c)));
  parser1.Rules.[50] <- rule;
  rule <- skeleton_production("CurrentAPL_")
  rule.action <- fun parser ->
    (let a = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_19(_rrsemaction_51_(parser,a)));
  parser1.Rules.[51] <- rule;
  rule <- skeleton_production("CurrentAPL_")
  rule.action <- fun parser ->
    (let vLBox = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_19(_rr_19) ->  _rr_19 | _ -> Unchecked.defaultof<expr list>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let a = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_19(_rrsemaction_52_(parser,a,_item1_,vLBox)));
  parser1.Rules.[52] <- rule;
  rule <- skeleton_production("StmtList_")
  rule.action <- fun parser ->
    ( FLTypeDUnion.Enumvariant_22(_rrsemaction_53_(parser)));
  parser1.Rules.[53] <- rule;
  rule <- skeleton_production("StmtList_")
  rule.action <- fun parser ->
    (let c = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_22(_rr_22) ->  _rr_22 | _ -> Unchecked.defaultof<LBox<expr> list>) in  FLTypeDUnion.Enumvariant_22(_rrsemaction_54_(parser,c)));
  parser1.Rules.[54] <- rule;
  rule <- skeleton_production("CurrentSL_")
  rule.action <- fun parser ->
    (let s_sitem = parser.Pop() in let s_val = (match s_sitem.svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let s = lbox(s_val,s_sitem.line,s_sitem.column) in  FLTypeDUnion.Enumvariant_22(_rrsemaction_55_(parser,s)));
  parser1.Rules.[55] <- rule;
  rule <- skeleton_production("CurrentSL_")
  rule.action <- fun parser ->
    (let vLBox = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_22(_rr_22) ->  _rr_22 | _ -> Unchecked.defaultof<LBox<expr> list>) in let s_sitem = parser.Pop() in let s_val = (match s_sitem.svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let s = lbox(s_val,s_sitem.line,s_sitem.column) in  FLTypeDUnion.Enumvariant_22(_rrsemaction_56_(parser,s,vLBox)));
  parser1.Rules.[56] <- rule;
  rule <- skeleton_production("AtomList_")
  rule.action <- fun parser ->
    (let a_sitem = parser.Pop() in let a_val = (match a_sitem.svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let a = lbox(a_val,a_sitem.line,a_sitem.column) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_22(_rrsemaction_57_(parser,_item0_,a)));
  parser1.Rules.[57] <- rule;
  rule <- skeleton_production("AtomList_")
  rule.action <- fun parser ->
    (let vLBox = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_22(_rr_22) ->  _rr_22 | _ -> Unchecked.defaultof<LBox<expr> list>) in let a_sitem = parser.Pop() in let a_val = (match a_sitem.svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let a = lbox(a_val,a_sitem.line,a_sitem.column) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_22(_rrsemaction_58_(parser,_item0_,a,vLBox)));
  parser1.Rules.[58] <- rule;
  rule <- skeleton_production("LambdaList_")
  rule.action <- fun parser ->
    (let t = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_25(_rr_25) ->  _rr_25 | _ -> Unchecked.defaultof<lrtype>) in let v = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_6(_rr_6) ->  _rr_6 | _ -> Unchecked.defaultof<string>) in  FLTypeDUnion.Enumvariant_23(_rrsemaction_59_(parser,v,t)));
  parser1.Rules.[59] <- rule;
  rule <- skeleton_production("LambdaList_")
  rule.action <- fun parser ->
    (let llist = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_23(_rr_23) ->  _rr_23 | _ -> Unchecked.defaultof<(lrtype*string) list>) in let _item2_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let t = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_25(_rr_25) ->  _rr_25 | _ -> Unchecked.defaultof<lrtype>) in let v = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_6(_rr_6) ->  _rr_6 | _ -> Unchecked.defaultof<string>) in  FLTypeDUnion.Enumvariant_23(_rrsemaction_60_(parser,v,t,_item2_,llist)));
  parser1.Rules.[60] <- rule;
  rule <- skeleton_production("OptionalType_")
  rule.action <- fun parser ->
    ( FLTypeDUnion.Enumvariant_25(_rrsemaction_61_(parser)));
  parser1.Rules.[61] <- rule;
  rule <- skeleton_production("OptionalType_")
  rule.action <- fun parser ->
    (let t = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_25(_rr_25) ->  _rr_25 | _ -> Unchecked.defaultof<lrtype>) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_25(_rrsemaction_62_(parser,_item0_,t)));
  parser1.Rules.[62] <- rule;
  rule <- skeleton_production("Type_")
  rule.action <- fun parser ->
    (let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_25(_rrsemaction_63_(parser,_item0_)));
  parser1.Rules.[63] <- rule;
  rule <- skeleton_production("Type_")
  rule.action <- fun parser ->
    (let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_25(_rrsemaction_64_(parser,_item0_)));
  parser1.Rules.[64] <- rule;
  rule <- skeleton_production("Type_")
  rule.action <- fun parser ->
    (let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_25(_rrsemaction_65_(parser,_item0_)));
  parser1.Rules.[65] <- rule;
  rule <- skeleton_production("Type_")
  rule.action <- fun parser ->
    (let _item2_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let _item1_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let t = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_25(_rr_25) ->  _rr_25 | _ -> Unchecked.defaultof<lrtype>) in  FLTypeDUnion.Enumvariant_25(_rrsemaction_66_(parser,t,_item1_,_item2_)));
  parser1.Rules.[66] <- rule;
  rule <- skeleton_production("Type_")
  rule.action <- fun parser ->
    (let _item2_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let v = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_6(_rr_6) ->  _rr_6 | _ -> Unchecked.defaultof<string>) in let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_25(_rrsemaction_67_(parser,_item0_,v,_item2_)));
  parser1.Rules.[67] <- rule;
  rule <- skeleton_production("OptionalLambdaType_")
  rule.action <- fun parser ->
    ( FLTypeDUnion.Enumvariant_25(_rrsemaction_68_(parser)));
  parser1.Rules.[68] <- rule;
  rule <- skeleton_production("OptionalLambdaType_")
  rule.action <- fun parser ->
    (let t = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_25(_rr_25) ->  _rr_25 | _ -> Unchecked.defaultof<lrtype>) in  FLTypeDUnion.Enumvariant_25(_rrsemaction_69_(parser,t)));
  parser1.Rules.[69] <- rule;
  rule <- skeleton_production("Program_")
  rule.action <- fun parser ->
    (let aL = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_22(_rr_22) ->  _rr_22 | _ -> Unchecked.defaultof<LBox<expr> list>) in let b_sitem = parser.Pop() in let b_val = (match b_sitem.svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let b = lbox(b_val,b_sitem.line,b_sitem.column) in let a_sitem = parser.Pop() in let a_val = (match a_sitem.svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in let a = lbox(a_val,a_sitem.line,a_sitem.column) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_70_(parser,a,b,aL)));
  parser1.Rules.[70] <- rule;
  rule <- skeleton_production("Program_")
  rule.action <- fun parser ->
    (let a = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_0(_rrsemaction_71_(parser,a)));
  parser1.Rules.[71] <- rule;
  rule <- skeleton_production("Program_")
  rule.action <- fun parser ->
    ( FLTypeDUnion.Enumvariant_0(_rrsemaction_72_(parser)));
  parser1.Rules.[72] <- rule;
  rule <- skeleton_production("START")
  rule.action <- fun parser ->
    (let _item0_ = (match parser.Pop().svalue with | FLTypeDUnion.Enumvariant_0(_rr_0) ->  _rr_0 | _ -> Unchecked.defaultof<expr>) in  FLTypeDUnion.Enumvariant_1(_rrsemaction_73_(parser,_item0_)));
  parser1.Rules.[73] <- rule;

  for i in 0..2019 do
    let (sti,symi,action) = decode_action(TABLE.[i])
    parser1.RSM.[sti].Add(SYMBOLS.[symi],action)
  for s in SYMBOLS do ignore (parser1.Symset.Add(s));
  parser1;;

let convert_token (lt:RawToken) =
  if lt=null then None
  else
    let (uval,utype) = 
      match lt.token_name with
        | "Num" -> (FLTypeDUnion.Enumvariant_3(int(lt.token_text)),"INT")
        | "Float" -> (FLTypeDUnion.Enumvariant_4(float(lt.token_text)),"FLT")
        | "StrLit" -> (FLTypeDUnion.Enumvariant_6((fun x -> x)(lt.token_text)),"STR")
        | "Alphanum" -> (FLTypeDUnion.Enumvariant_6((fun x -> x)(lt.token_text)),"VAR")
        | "!" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"NOT")
        | "{" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"LBRC")
        | "[" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"LBRK")
        | "." -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"PERIOD")
        | "," -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"COMMA")
        | "}" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"RBRC")
        | "&&" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"AND")
        | "]" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"RBRK")
        | "||" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"OR")
        | "(" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"LPAR")
        | ";" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"SEMI")
        | ":" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"COLON")
        | ")" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"RPAR")
        | "car" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"car")
        | "cdr" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"cdr")
        | "print" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"print")
        | "~" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"~")
        | "*" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"*")
        | "/" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"/")
        | "%" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"%")
        | "+" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"+")
        | "-" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"-")
        | "<" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"<")
        | "<=" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"<=")
        | ">" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),">")
        | ">=" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),">=")
        | "==" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"==")
        | "!=" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"!=")
        | "^" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"^")
        | "=" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"=")
        | "int" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"int")
        | "float" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"float")
        | "string" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"string")
        | "if" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"if")
        | "then" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"then")
        | "else" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"else")
        | "let" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"let")
        | "in" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"in")
        | "while" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"while")
        | "define" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"define")
        | "lambda" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"lambda")
        | "export" -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"export")
        | "EOF" -> (FLTypeDUnion.Enumvariant_1(Unchecked.defaultof<unit>),"EOF")
        | x -> (FLTypeDUnion.Enumvariant_0(Unchecked.defaultof<expr>),"Error:"+x)
    Some({TerminalToken.sym=utype; svalue=uval; line=lt.line; column=lt.column;});;

let parse_with(parser:RTParser<FLTypeDUnion,unit>, lexer:AbstractLexer<unit>) : expr option  =
  lexer.set_shared(parser.exstate)
  parser.NextToken <- fun () -> convert_token(lexer.next_lt())
  match parser.parse_core() with
    | Some(FLTypeDUnion.Enumvariant_0(_yyxres_)) -> Some(_yyxres_)
    | _ -> None;;

